// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gitEF.Data;

#nullable disable

namespace gitEF.Migrations
{
    [DbContext(typeof(QLSVDbContext))]
    partial class QLSVDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("gitEF.Models.LopSH", b =>
                {
                    b.Property<int>("ID_Lop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Lop"));

                    b.Property<string>("Khoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameLop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Tên lớp");

                    b.HasKey("ID_Lop");

                    b.ToTable("Lớp sinh hoạt");
                });

            modelBuilder.Entity("gitEF.Models.Rank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("gitEF.Models.SinhVien", b =>
                {
                    b.Property<string>("MSSV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("DTB")
                        .HasColumnType("float");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int>("ID_Lop")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("NS")
                        .HasColumnType("datetime2");

                    b.HasKey("MSSV");

                    b.HasIndex("ID");

                    b.HasIndex("ID_Lop");

                    b.ToTable("Sinh Viên");
                });

            modelBuilder.Entity("gitEF.Models.SinhVien", b =>
                {
                    b.HasOne("gitEF.Models.Rank", "RK")
                        .WithMany("SVs")
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gitEF.Models.LopSH", "LSH")
                        .WithMany("SVs")
                        .HasForeignKey("ID_Lop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LSH");

                    b.Navigation("RK");
                });

            modelBuilder.Entity("gitEF.Models.LopSH", b =>
                {
                    b.Navigation("SVs");
                });

            modelBuilder.Entity("gitEF.Models.Rank", b =>
                {
                    b.Navigation("SVs");
                });
#pragma warning restore 612, 618
        }
    }
}
